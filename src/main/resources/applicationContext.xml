<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springmodules.org/schema/cache/springmodules-cache.xsd
    http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd
    ">    
     <context:component-scan base-package="com.bnuz">
       <!-- 不扫描控制器 -->  
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>  
    <context:component-scan base-package="com.bnuz.kq.shiro"/>
    
        
     <!-- 加载properties文件 -->   
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    </bean>
    
    <!-- 配置与mybaits整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <!--mybatis的配置文件位置-->
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!--扫描 XXXmapper.xml映射文件,配置扫描的路径-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    
    <!-- DAO接口所在包名，扫描接口并加入到ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bnuz.kq.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
 
    <!--事务管理-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <!--  注入dataSource -->
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 开启基于注解的实务 -->
    <!-- <aop-config>
         切入点表达式
         <aop:pointcut expression="execution(*com.bnuz.kq.service..*(..))" id="txPoint"></aop:pointcut>
         配置事务增强
         <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
         
    </aop-config> -->
    <context:component-scan base-package="com.bnuz.kq.service" />
    <!-- 事物如何切入 -->
    <tx:advice id="txAdvice">
         <tx:attributes>
            <tx:method name="*"/>
            <tx:method name="get*" read-only="true"/>           
         </tx:attributes>
    </tx:advice>
   
    

	<!-- 1.安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	   <!-- <property name="cacheManager" ref="cacheManager"></property> -->
	   <property name="sessionMode" value="native"></property>
	   <property name="realm" ref="jdbcRealm"/>
	</bean>
	
	<!-- 配置cacheManager缓存管理-->
	<!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean> -->

<!-- 配置自定义Realm -->
	<bean id="jdbcRealm" class="com.bnuz.kq.shiro.ShiroRealm"/>
	
	<!-- 4.配置自动调用配置在spring ioc容器中shiro bean的生命周期方法 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- 5.启用ioc容器中shiro注解 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
	      depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
	
	<!-- 6.Shiro过滤器 核心 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
		<property name="loginUrl" value="/login.jsp"/>
		<property name="successUrl" value="/list.jsp"/>
		<property name="unauthorizedUrl" value="/nopower.jsp"/>
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<property name="filterChainDefinitions">
		   <value>
		        /login.jsp = anon
		        /shiro/login = anon
		        /shiro/logout = logout
		        /css/**= anon
                /images/**= anon
                /img/** =anon
                /js/** =anon
                /static/** = anon
		        <!--角色过滤器  -->
				/emps/myemp =  roles[emp]
				/emps/allemps = roles[manager]
		    </value>
		</property>
	</bean>
	
	
	
    
   
</beans>
